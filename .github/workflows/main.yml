name: Unity Actions ðŸŽ®

on:
  pull_request: { }
  push: { branches: [main] }
  workflow_dispatch: { }
  
jobs:
#  testAllModes:
#    name: Test in ${{ matrix.testMode }} âœ¨
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        projectPath:
#          - ./
#        testMode:
#          - playmode
#          - editmode
#    steps:
#      - name: Checkout project files
#        uses: actions/checkout@v3
#        with:
#          lfs: true
#
#      - name: Restore Cache 
#        uses: actions/cache@v3
#        with:
#          path: ${{ matrix.projectPath }}/Library
#          key: Library-${{ matrix.projectPath }}
#          restore-keys: |
#            Library-
#
#      - name: Run Tests 
#        uses: game-ci/unity-test-runner@v3
#        id: tests
#        env:
#          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#        with:
#          projectPath: ${{ matrix.projectPath }}
#          testMode: ${{ matrix.testMode }}
#          artifactsPath: ${{ matrix.testMode }}-artifacts
#          githubToken: ${{ secrets.GITHUB_TOKEN }}
#          checkName: ${{ matrix.testMode }} test results
#          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
#
#      - name: Uploads test artifacts  
#        uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: Test results for ${{ matrix.testMode }}
#          path: ${{ steps.tests.outputs.artifactsPath }}
#
#      # Disabled
#      - name: Uploads coverage artifacts      
#        uses: actions/upload-artifact@v3
#        if: false
#        with:
#          name: Coverage results for ${{ matrix.testMode }}
#          path: ${{ steps.tests.outputs.coveragePath }}
                 
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows64
          - StandaloneLinux64
          - iOS
          - Android
          - WebGL 
    steps:
      - name: Checkout project files
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
          
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.2.0

      - name: Run Tests
        uses: game-ci/unity-builder@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
    
      - name: Uploads build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
